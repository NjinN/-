#包含 "习语言系统.接口"


整数 判断尾串(字符 *句, 字符 *目标串){
	自然数 句长 = 字符串长度(句);
	自然数 目标串长 = 字符串长度(目标串);
	
	返回 字符串比较(句 + 句长 - 目标串长, 目标串) 等于 0;	
}


整数 判断头串(字符 *句, 字符 *目标串){
	返回 字符串定长比较(句, 目标串, 字符串长度(目标串)) 等于 0;	
}


字符 *筛查子串(字符 *句, 字符 *目标串, 字符 *转义串 ){
	如果(转义串 等于 空指针){
		返回 字符串查找子串(句, 目标串);		
	}否则{
		重复{
			句 = 字符串查找子串(句, 目标串);
			如果( 句 等于 空指针){返回 空指针}
			句 += 字符串长度(目标串); 		
		}直到(非 判断头串(句 - 字符串长度(转义串), 转义串) );
		返回 句;	
	}
}


字符 *查找空符(字符 *句){
	当((*句 不等于 0) 并且 (非 是空白字符(取当前字(句))))重复{
		句 += 字长度(取当前字(句));	
	}
	返回 句;
}


字符 *查找非空符(字符 *句){
	当((*句 不等于 0) 并且 (是空白字符(取当前字(句))))重复{
		句 += 字长度(取当前字(句));	
	}
	返回 句;
}

整数 判断数字串(字符 *句){
	如果(字符串长度(句) 等于 0){
		返回 -1;
	}
	自然数 点数 = 0;
	汉字类型 字;
	字 = 取当前字(句);
	如果((非 是数字(字, '半角')) 并且 (*句 不等于 '-')){
		返回 -1;	
	}
	句 += 字长度(字);
	重复{
		字 = 取当前字(句);
		如果(非 是数字(字, '半角')){
			如果(*句 等于 '.'){
				点数++;
			}否则{
				返回 -1;
			}
		}
		句 += 字长度(字);
	}直到(*句 等于 0);
	返回 点数;
}


