#包含 "习语言系统.接口"

#包含 "析构.习"


类型定义 结构类型 作业线 {
	自然数	线长;
	自然数	序号;
	容器 	*境;
	令牌	*栈;
	结构类型	作业线 	*父;
};

#包含 "原生库.习"

整数类型 值绑定(作业线 *线){
	插入哈希表( &(*((*线).境)).绑定表, (*((*线).栈)).值空间.字面值, &(*((*线).栈 + 1)) );
	(*线).序号 = 0;
	返回 1;
}

令牌 *取值(作业线 *线, 令牌 *令){
	如果(令 等于 空指针){
		返回 空指针;
	}
	如果((*令).类型 大于 100){
		返回 令;
	}
	令牌 *结果 = 空指针;
	重复{
		结果 = 取哈希表项( &(*((*线).境)).绑定表 , (*令).值空间.字面值);
		令 = 结果;
	}直到(结果 等于 空指针 或 ((*结果).类型 大于 100  或 (*结果).类型 等于 1));
	返回 结果;
}



令牌 *执行线(作业线 *线){	
	如果((*线).序号 等于 (*(*线).栈).句长){
		如果((*(*线).栈).类型 等于 _单字){
			(*线).序号 = 0;
			返回 取值(线, (*线).栈);
		} 
		如果((*(*线).栈).类型 等于 _设字){
			(*线).序号 = 0;
			插入哈希表(&(*(*线).境).绑定表, (*(*线).栈).值空间.字面值, (*线).栈 + 1);
			返回 (*线).栈 + 1;
		}
		如果((*(*线).栈).类型 等于 _原生函数){
			(*线).序号 = 0;
			返回 执行原生函数(线);
		}
		如果((*(*线).栈).类型 大于 100){
			(*线).序号 = 0;
			返回 (*线).栈;
		}  
	}
	返回 空指针;	
}


/*
无类型 主函数( ){
	作业线 线;
		
}
*/

















