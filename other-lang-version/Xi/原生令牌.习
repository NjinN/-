#包含 "习语言系统.接口"

#包含 "容器.习"
#包含 "字符串工具.习"


令牌 *转原生令牌(字符 *词, 容器 *境, 自然数 行号){

	令牌 *令 = 内存申请并清零(类型长度(令牌));
	字符 *字面值 = 内存申请并清零(字符串长度(词) + 1);		
	
	/********  加法 *********/
	如果(字符串比较(词, "add") 等于 0){
		(*令).类型 = _原生函数;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	如果(字符串比较(词, "加") 等于 0){
		(*令).类型 = _原生函数;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	
	/********  减法 *********/
	如果(字符串比较(词, "sub") 等于 0){
		(*令).类型 = _原生函数;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	如果(字符串比较(词, "减") 等于 0){
		(*令).类型 = _原生函数;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	
	/********  乘法 *********/
	如果(字符串比较(词, "mul") 等于 0){
		(*令).类型 = _原生函数;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	如果(字符串比较(词, "乘") 等于 0){
		(*令).类型 = _原生函数;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	
	/********  除法 *********/
	如果(字符串比较(词, "div") 等于 0){
		(*令).类型 = _原生函数;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	如果(字符串比较(词, "减") 等于 0){
		(*令).类型 = _原生函数;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	
	
	/******** 中缀运算符 *********/
	如果(字符串比较(词, "+") 等于 0){
		(*令).类型 = _中缀;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	如果(字符串比较(词, "-") 等于 0){
		(*令).类型 = _中缀;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	如果(字符串比较(词, "*") 等于 0){
		(*令).类型 = _中缀;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	如果(字符串比较(词, "/") 等于 0){
		(*令).类型 = _中缀;
		内存复制(词, 字面值, 字符串长度(词) );
		(*令).值空间.字面值 = 字面值;
		(*令).境 = 境;
		(*令).句长 = 3;
		(*令).行号 = 行号;
		返回 令;
	}
	
	
	
	返回 空指针;
}









